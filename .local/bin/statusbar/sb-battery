#!/bin/sh

case $BLOCK_BUTTON in
	3) notify-send "󰁹 Battery module" "󰁹: discharging
󰂃: not charging
󰂄: stagnant charge
󰂅: charging
󰁹: charged
- Scroll to change adjust xbacklight." ;;
	4) xbacklight -inc 10 ;;
	5) xbacklight -dec 10 ;;
	6) "$TERMINAL" -e "$EDITOR" "$0" ;;
esac

# Loop through all attached batteries and format the info
for battery in /sys/class/power_supply/BAT?*; do
	# If non-first battery, print a space separator.
	[ -n "${capacity+x}" ] && printf " "
	capacity=$(cat "$battery/capacity")
	# Sets up the status and capacity
	case "$(cat "$battery/status")" in
		"Full") status="󰁹" ;;
		"Discharging")
			if [ $capacity -eq 100 ]; then  status="󰁹"
    			elif [ $capacity -gt 90 ]; then status="󰂂"
    			elif [ $capacity -gt 80 ]; then status="󰂁"
			elif [ $capacity -gt 70 ]; then status="󰂀"
			elif [ $capacity -gt 60 ]; then status="󰁿"
    			elif [ $capacity -lt 40 ]; then status="󰁽"
			elif [ $capacity -lt 30 ]; then status="󰁼"
			elif [ $capacity -lt 20 ]; then status="󰁻"
    			elif [ $capacity -lt 10 ]; then status="󰁺"
    			else                            status="󰁾"
    			fi ;;
		"Charging")
			if [ $capacity -eq 100 ]; then  status="󰂅"
    			elif [ $capacity -gt 90 ]; then status="󰂋"
    			elif [ $capacity -gt 80 ]; then status="󰂊"
			elif [ $capacity -gt 70 ]; then status="󰢞"
			elif [ $capacity -gt 60 ]; then status="󰂉"
    			elif [ $capacity -lt 40 ]; then status="󰂈"
			elif [ $capacity -lt 30 ]; then status="󰂇"
			elif [ $capacity -lt 20 ]; then status="󰂆"
    			elif [ $capacity -lt 10 ]; then status="󰢜"
    			else                            status="󰢝"
    			fi ;;

		"Not charging") status="󰂃" ;;
		"Unknown") status="󰂄" ;;
	esac
	# Prints the info
	printf "%s%s%d%%" "$status" "$warn" "$capacity"; unset warn
done && exit 0
